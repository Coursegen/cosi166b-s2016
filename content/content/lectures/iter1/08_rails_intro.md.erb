---
title: Intro to Rails
desc: Where we dig into Rails for the first time
homework: Submit movies-2 to github; read/do AWDR Chapter 2 and 3
---
<%= homework_hdr %>
* You should have completed <%= link_to_topic :pa_movies_2 %> which was a continuation of the first programming assignment <%= link_to_topic :pa_movies_1 %>. Make sure your code is all in your <%= link_to_intro :portfolio %>, directory "movies-2" and that it works. 
  * Look closely at the end of <%= link_to_topic :pa_movies_2 %> where two deliverables are specified. <%= deliverable "Upload your code to github; run it through Codeclimate; write a post with the requested information about your solution." %>
* Read Chapter 2, "Instant Gratification", in \[AWDR\]. 
	* I highly recommend you follow along with the coding examples and stick with it until you get it to work. I expect that you will not 'understand' much of what is going on, but try not to let that worry you. One of the objections that some people have about Rails is that there is too much 'magic'. By the end of the course you will understand what is happening and why, and the 'magic' will turn into 'convenience' and 'productivity'. All of your coding should be in <%= link_to_intro :portfolio %> in a subdirectory for this chapter.
* Read Chapter 3, "The Architecture of Rails Applications" in \[AWDR\]. 
	* The crucial thing to try and understand is what the MVC model is about. And the second essential concept is Object-Relational Mapping. Both MVC and ORM are not Rails nor Ruby concepts. They are foundational ideas which came before, and are used in many other architectural patterns. It is complicated and we will go over it many times during this course so expect to not follow everything.

<%= callout("REMINDER", " Your portfolios will be reviewed and graded TODAY for progress.") %>
	
#### Post-it note exercise

#### Homework Discussion
* How did it go with Chapter 2 and 3?
* What is an ORM?
* What is MVC?
* Brainstorm: What are all the things that happen when I type http://www.salas.com into my web browser? Everyone talks!


<%= include_topic :how_web_servers_work %>

#### Rails Points of interest
* So what is Rails, really? It's a library of Ruby code, that's all
* Why do they call Rails 'opinionated' software?
* Go through the directory structure?
* Key files and directories
	* Routes.rb
	* Models
	* Views
	* Controllers

#### Next Class
* Look at homework <%= link_to_next_lecture %>







