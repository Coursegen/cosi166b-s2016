---
title: (Offline) Smell Exercise
---
#### What are smells?
* Summary of <%= link_to_topic :code_smells %>
* Feel free to google for code smells, you will find lots of information.

#### Preparation

1. On your own, take a look at the code below. You can copy it into your own text editor
1. Get it to run, and understand what it does. You might have to experiment a little and learn some new Ruby. 
1. Study the code. Concentrate on two code smells:
  1. The unusual way that params.each works (line 3). Try to figure out what exactly that line is doing. Yes it's pretty clever but why did I write it that way, and what are some problems with that?
  1. The convoluted way that price is computed (line 27+). Generally when you have a nested calculation like that, and secondly when a class has some kind of "code" to distinguish types, this is a code smell and tells us that there's room for improvement.
  1. And of course, this method is much longer than it should be.

#### Instructions

1. On your own, try to come up with how to improve the code. You will be doing some "refactoring" which is a fancy way to say changing the code that is written without changing it's functionality in any way. Take 30 minutes or less doing this.
1. Find 1 or 2 other students in our class to work with. This can be in person or over email. Discuss each person's views on the smells. Why are they a problem? How could they be improved? Together write the best improved version of this program using your best ideas.
1. Write up a joint summary (PDF) of your work (remember to include your names!). Discuss:
  * The problems you all saw with the original code
  * What new Ruby you had to learn to accomplish this
  * What does your improved code looks like?
  * In what ways do you feel it's a solution?

#### Here's the code:
<%= include_ruby :mountain_bike_refactor1 %>


