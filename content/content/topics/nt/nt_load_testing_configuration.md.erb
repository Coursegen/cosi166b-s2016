---
title: Load Testing Specs
---
For the final deliverable we will subject your implementation of nanoTwitter to a specific test scenario. Here are the tests you are required to be able to pass, as well as how to prepare for them.

1. Show the homepage with 100 most recent tweets
1. Create a user named test_user
	* Create a path (/test_tweet) which when visited causes test_user to post a random tweet (use faker or a set string + a timestamp to generate unique tweets). 
	* Use loader.io to run against /test_tweet and the home page.

1. Create a path (/test_follow) which when visited selects a random user and has test_user follow that user or unfollow that user (if test_user currently follows that user, unfollow. If test user_does not follow that user, follow).
	* Use loader.io to run against /test_follow and test_user's profile page. The profile page should show the 100 most recent tweets only by people test_user follows

1. Create a path (/reset) which deletes all tweets by test_user and has test_user unfollow all users. This is used between tests to reset.

 
