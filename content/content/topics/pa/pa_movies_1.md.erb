---
title: (PA) Movies Part 1
desc: Load up a big data file with movie data and compute some simple statistics
---
Social networking-based webapps often collect a huge amount of information about the members of the community.  One of the most exciting developments in the past decade has been the development of tools for analyzing this data to provide value for the community.  For this assignment, you are to write a ruby program that reads in a large data set and produces some analysis.

#### Data

The data set, ml-100k, consists of 100,000 ratings of 1682 movies from 943 users and can be downloaded from one of these places:

* http://www.grouplens.org
* http://dennett.cs-i.brandeis.edu/talks/ml-100k.zip

The main data set u.data consists of 100,000 rows where each row has 4 tab-separated items:

* user_id
* movie_id
* rating
* timestamp

More information about the users and movies can be found in other files, but you don't need that info for this assignment.

#### Program

* You should write a program movie_data.rb containing a class MovieData with the following methods
	* load_data  - this will read in the data from the original ml-100k files and stores them in whichever way it needs to be stored
	* popularity(movie_id) - this will return a number that indicates the popularity (higher numbers are more popular). You should be prepared to explain the reasoning behind your definition of popularity
	* popularity_list - this will generate a list of all movie_id's ordered by decreasing popularity
	* similarity(user1,user2) - this will generate a number which indicates the similarity in movie preference between user1 and user2 (where higher numbers indicate greater similarity)
	* most_similar(u) - this return a list of users whose tastes are most similar to the tastes of user u

* Questions to think about (be prepared to discuss them ...)
	* Describe an algorithm to predict the ranking that a user U would give to a movie M assuming the user hasn't already ranked the movie in the dataset.
	* Does your algorithms scale? What factors determine the execution time of your "most_similar" and "popularity_list" algorithms.

#### Deliverables
* the movie_data.rb source code, as clean and elegant as you can make it.
* a transcript of running your code and generating the first and last ten elements of popularity list and most_similar(1). In other words, run your code from the command line, and cut and paste the output into a text file and include that in your portfolio, for example, as running_transcript.txt
* A readme file that describes your solution and also considers the questions posed above.
