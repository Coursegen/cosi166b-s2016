---
title: Evolution of Software Testing
---
#### Evolution of Software Testing - in brief

* [The Original "Bug" found by Grace Hopper](http://en.wikipedia.org/wiki/Grace_Hopper#mediaviewer/File:H96566k.jpg)

* Industrial or Manufacturing model
	* Quality Assurance: Make sure that the product we ship works as advertised
	* Factory cranks parts, random sample is sent back to the lab and 'tested'
	* Statistics used to deterime whether the quality was at the desired level
* Software Quality Assurance
	* Realize that software was different
	* Required a detailed functional spec
	* Believed in an adverserial relationship between QA and Development team
	* Written test plans
	* Most testing was manual
* Automated Analysis as a Computer Science persuit
	* Read code and detect the errors?
	* "Executable" specifications
	* Automatic measures of code complexity to predict location of errors
* Introduction of test automation
	* Required some rearchitecture of the software
	* Turned the 'manual' test plans into something that could be 'executed'
* Beginning of merging of QA with Dev
	* We see that finding a bug early in cycle saves big bucks
	* We see that software can be designed to be testable
	* Titles startreflecting this "Quality Engineer" -- QE not QA
	* 'Testing' function is integrated into the development team
* Agile methodology
	* Whole concept of shipping a product begins disappearing
	* Rapid release cycles, even continuous delivery
	* Holy grail is 100% automated testing. Manual testing disappears
	* Agile's emphasis on refactoring demands finer grained unit tests
* Present era
	* Contunous testing, integration and testing
	* The notion of a release or a version totally gone
	* Feature switches allow individual features to be released and un-released
	* Cloud computing means that deployment happens to faraway servers
	* Further integration of "operations" into software development: Rise of Devops.

* Here's a longer version: [History of Software Testing](http://www.testingreferences.com/testinghistory.php)